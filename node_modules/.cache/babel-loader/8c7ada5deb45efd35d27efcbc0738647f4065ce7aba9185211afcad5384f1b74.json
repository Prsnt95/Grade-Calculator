{"ast":null,"code":"var _jsxFileName = \"/Users/prashant/Desktop/untitled folder/react/react-web/src/components/Inputs.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inputs = () => {\n  _s();\n  const [rowNum, setRowNum] = React.useState([/*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 47\n  }, this)]);\n  const calculateGrades = () => {\n    let gradeSum = 0;\n    let weightSum = 0;\n    tableCollection.forEach(({\n      grade,\n      weight\n    }) => {\n      const numericGrade = parseFloat(grade);\n      const numericWeight = parseFloat(weight);\n      if (!isNaN(numericGrade) && !isNaN(numericWeight)) {\n        gradeSum += numericGrade * numericWeight;\n        weightSum += numericWeight;\n      }\n    });\n    const totalGrade = weightSum !== 0 ? gradeSum / weightSum : 0;\n    const totalWeight = weightSum;\n    console.log(\"Total Grade:\", totalGrade);\n    console.log(\"Total Weight:\", totalWeight);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Grade type Percentage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), rowNum, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div--extra\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"Find additional grade needed to get average grade of (assumes weights in %)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"boldText\",\n          children: \"Optional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"addtionalGrade\",\n          placeholder: \"80\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Inputs, \"ZWQpFLFUJCOJUYN2hQUiRv9LM+I=\");\n_c = Inputs;\nexport default Inputs;\nvar _c;\n$RefreshReg$(_c, \"Inputs\");","map":{"version":3,"names":["React","Row","jsxDEV","_jsxDEV","Inputs","_s","rowNum","setRowNum","useState","fileName","_jsxFileName","lineNumber","columnNumber","calculateGrades","gradeSum","weightSum","tableCollection","forEach","grade","weight","numericGrade","parseFloat","numericWeight","isNaN","totalGrade","totalWeight","console","log","className","children","placeholder","type","_c","$RefreshReg$"],"sources":["/Users/prashant/Desktop/untitled folder/react/react-web/src/components/Inputs.jsx"],"sourcesContent":["import React from \"react\";\nimport Row from \"./Row\";\n\nconst Inputs = () => {\n  const [rowNum, setRowNum] = React.useState([<Row />]);\n\n  const calculateGrades = () => {\n    let gradeSum = 0;\n    let weightSum = 0;\n\n    tableCollection.forEach(({ grade, weight }) => {\n      const numericGrade = parseFloat(grade);\n      const numericWeight = parseFloat(weight);\n\n      if (!isNaN(numericGrade) && !isNaN(numericWeight)) {\n        gradeSum += numericGrade * numericWeight;\n        weightSum += numericWeight;\n      }\n    });\n\n    const totalGrade = weightSum !== 0 ? gradeSum / weightSum : 0;\n    const totalWeight = weightSum;\n    console.log(\"Total Grade:\", totalGrade);\n    console.log(\"Total Weight:\", totalWeight);\n  };\n\n  return (\n    <div className=\"input-div\">\n      <h2>Grade type Percentage</h2>\n      {rowNum}\n      <div className=\"input-div--extra\">\n        <p>\n          {\" \"}\n          Find additional grade needed to get average grade of (assumes weights\n          in %)\n          <br />\n          <span className=\"boldText\">Optional</span>\n        </p>\n        <span>\n          <input\n            className=\"addtionalGrade\"\n            placeholder=\"80\"\n            type=\"number\"\n          ></input>\n          %\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default Inputs;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,cAACL,OAAA,CAACF,GAAG;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,CAAC;EAErD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIC,QAAQ,GAAG,CAAC;IAChB,IAAIC,SAAS,GAAG,CAAC;IAEjBC,eAAe,CAACC,OAAO,CAAC,CAAC;MAAEC,KAAK;MAAEC;IAAO,CAAC,KAAK;MAC7C,MAAMC,YAAY,GAAGC,UAAU,CAACH,KAAK,CAAC;MACtC,MAAMI,aAAa,GAAGD,UAAU,CAACF,MAAM,CAAC;MAExC,IAAI,CAACI,KAAK,CAACH,YAAY,CAAC,IAAI,CAACG,KAAK,CAACD,aAAa,CAAC,EAAE;QACjDR,QAAQ,IAAIM,YAAY,GAAGE,aAAa;QACxCP,SAAS,IAAIO,aAAa;MAC5B;IACF,CAAC,CAAC;IAEF,MAAME,UAAU,GAAGT,SAAS,KAAK,CAAC,GAAGD,QAAQ,GAAGC,SAAS,GAAG,CAAC;IAC7D,MAAMU,WAAW,GAAGV,SAAS;IAC7BW,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,UAAU,CAAC;IACvCE,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,WAAW,CAAC;EAC3C,CAAC;EAED,oBACEtB,OAAA;IAAKyB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB1B,OAAA;MAAA0B,QAAA,EAAI;IAAqB;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BN,MAAM,eACPH,OAAA;MAAKyB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B1B,OAAA;QAAA0B,QAAA,GACG,GAAG,EAAC,6EAGL,eAAA1B,OAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNT,OAAA;UAAMyB,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAQ;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACJT,OAAA;QAAA0B,QAAA,gBACE1B,OAAA;UACEyB,SAAS,EAAC,gBAAgB;UAC1BE,WAAW,EAAC,IAAI;UAChBC,IAAI,EAAC;QAAQ;UAAAtB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,KAEX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACP,EAAA,CA9CID,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAgDZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}