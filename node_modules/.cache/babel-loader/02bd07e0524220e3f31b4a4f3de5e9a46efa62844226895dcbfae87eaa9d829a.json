{"ast":null,"code":"var _jsxFileName = \"/Users/prashant/Desktop/untitled folder/Github/Grade-Calculator/src/components/Outputs.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Outputs = ({\n  grades\n}) => {\n  let totalGrade = 0;\n  let totalWeight = 0;\n  grades.forEach(({\n    grade,\n    weight\n  }) => {\n    if (!isNaN(grade) && !isNaN(weight)) {\n      totalGrade += parseFloat(grade) * parseFloat(weight);\n      totalWeight += parseFloat(weight);\n    }\n  });\n  const averageGrade = totalGrade / totalWeight;\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"outputs\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Grades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"outputs--element\",\n      children: [\"Average Grade:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: [averageGrade.toFixed(2), \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"outputs--element\",\n      children: [\"Total Weight:\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: [totalWeight.toFixed(2), \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_c = Outputs;\nexport default Outputs;\nvar _c;\n$RefreshReg$(_c, \"Outputs\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Outputs","grades","totalGrade","totalWeight","forEach","grade","weight","isNaN","parseFloat","averageGrade","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","fontWeight","toFixed","_c","$RefreshReg$"],"sources":["/Users/prashant/Desktop/untitled folder/Github/Grade-Calculator/src/components/Outputs.jsx"],"sourcesContent":["import React from \"react\";\n\nconst Outputs = ({ grades }) => {\n  let totalGrade = 0;\n  let totalWeight = 0;\n  grades.forEach(({ grade, weight }) => {\n    if (!isNaN(grade) && !isNaN(weight)) {\n      totalGrade += parseFloat(grade) * parseFloat(weight);\n      totalWeight += parseFloat(weight);\n    }\n  });\n  const averageGrade = totalGrade / totalWeight;\n\n  return (\n    <section className=\"outputs\">\n      <h3>Your Grades</h3>\n      <p className=\"outputs--element\">\n        Average Grade:{\" \"}\n        <span style={{ fontWeight: \"bold\" }}>{averageGrade.toFixed(2)} %</span>\n      </p>\n      <p className=\"outputs--element\">\n        Total Weight:{\" \"}\n        <span style={{ fontWeight: \"bold\" }}>{totalWeight.toFixed(2)} %</span>\n      </p>\n    </section>\n  );\n};\n\nexport default Outputs;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAC9B,IAAIC,UAAU,GAAG,CAAC;EAClB,IAAIC,WAAW,GAAG,CAAC;EACnBF,MAAM,CAACG,OAAO,CAAC,CAAC;IAAEC,KAAK;IAAEC;EAAO,CAAC,KAAK;IACpC,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC,IAAI,CAACE,KAAK,CAACD,MAAM,CAAC,EAAE;MACnCJ,UAAU,IAAIM,UAAU,CAACH,KAAK,CAAC,GAAGG,UAAU,CAACF,MAAM,CAAC;MACpDH,WAAW,IAAIK,UAAU,CAACF,MAAM,CAAC;IACnC;EACF,CAAC,CAAC;EACF,MAAMG,YAAY,GAAGP,UAAU,GAAGC,WAAW;EAE7C,oBACEJ,OAAA;IAASW,SAAS,EAAC,SAAS;IAAAC,QAAA,gBAC1BZ,OAAA;MAAAY,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBhB,OAAA;MAAGW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,GAAC,gBAChB,EAAC,GAAG,eAClBZ,OAAA;QAAMiB,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAN,QAAA,GAAEF,YAAY,CAACS,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE,CAAC,eACJhB,OAAA;MAAGW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,GAAC,eACjB,EAAC,GAAG,eACjBZ,OAAA;QAAMiB,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAO,CAAE;QAAAN,QAAA,GAAER,WAAW,CAACe,OAAO,CAAC,CAAC,CAAC,EAAC,IAAE;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEd,CAAC;AAACI,EAAA,GAxBInB,OAAO;AA0Bb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}