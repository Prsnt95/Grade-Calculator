{"ast":null,"code":"var _jsxFileName = \"/Users/prashant/Desktop/untitled folder/Github/Grade-Calculator/src/components/Inputs.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Table from \"./Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inputs = ({\n  updateGrades\n}) => {\n  _s();\n  const [tableData, setTableData] = React.useState();\n\n  // Initialize extraField state as an empty object\n  const [extraField, setExtraField] = React.useState({});\n\n  // Handle input change for extraField\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setExtraField(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Grade type Percentage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      updateGrades: updateGrades,\n      tableData: tableData,\n      setTableData: setTableData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div--extra\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"Find additional grade needed to get average grade of (assumes weights in %)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"boldText\",\n          children: \"Optional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"additionalGrade\",\n          placeholder: \"80\",\n          type: \"number\",\n          name: \"extra\" // Use \"extra\" as the name for the input field\n          ,\n          value: extraField.extra // Access extraField.extra for the value\n          ,\n          onChange: handleInputChange,\n          style: {\n            width: \"50px\"\n          } // Set a fixed width\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"calculate\",\n        onClick: handleCalculation,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Inputs, \"F05lh65SD/gb7rzsybfdW5CmjDQ=\");\n_c = Inputs;\nexport default Inputs;\nvar _c;\n$RefreshReg$(_c, \"Inputs\");","map":{"version":3,"names":["React","Table","jsxDEV","_jsxDEV","Inputs","updateGrades","_s","tableData","setTableData","useState","extraField","setExtraField","handleInputChange","e","name","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","type","extra","onChange","style","width","onClick","handleCalculation","_c","$RefreshReg$"],"sources":["/Users/prashant/Desktop/untitled folder/Github/Grade-Calculator/src/components/Inputs.jsx"],"sourcesContent":["import React from \"react\";\nimport Table from \"./Table\";\n\nconst Inputs = ({ updateGrades }) => {\n  const [tableData, setTableData] = React.useState();\n\n  // Initialize extraField state as an empty object\n  const [extraField, setExtraField] = React.useState({});\n\n  // Handle input change for extraField\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setExtraField((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n  return (\n    <div className=\"input-div\">\n      <h2>Grade type Percentage</h2>\n      <Table\n        updateGrades={updateGrades}\n        tableData={tableData}\n        setTableData={setTableData}\n      />\n      <div className=\"input-div--extra\">\n        <p>\n          {\" \"}\n          Find additional grade needed to get average grade of (assumes weights\n          in %)\n          <br />\n          <span className=\"boldText\">Optional</span>\n        </p>\n        <span>\n          <input\n            className=\"additionalGrade\"\n            placeholder=\"80\"\n            type=\"number\"\n            name=\"extra\" // Use \"extra\" as the name for the input field\n            value={extraField.extra} // Access extraField.extra for the value\n            onChange={handleInputChange}\n            style={{ width: \"50px\" }} // Set a fixed width\n          ></input>\n          %\n        </span>\n        <button className=\"calculate\" onClick={handleCalculation}>\n          Calculate\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Inputs;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC;;EAElD;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,KAAK,CAACS,QAAQ,CAAC,CAAC,CAAC,CAAC;;EAEtD;EACA,MAAMG,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCL,aAAa,CAAEM,IAAI,KAAM;MACvB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC;IACV,CAAC,CAAC,CAAC;EACL,CAAC;EACD,oBACEZ,OAAA;IAAKe,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhB,OAAA;MAAAgB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BpB,OAAA,CAACF,KAAK;MACJI,YAAY,EAAEA,YAAa;MAC3BE,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA;IAAa;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACFpB,OAAA;MAAKe,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BhB,OAAA;QAAAgB,QAAA,GACG,GAAG,EAAC,6EAGL,eAAAhB,OAAA;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNpB,OAAA;UAAMe,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACJpB,OAAA;QAAAgB,QAAA,gBACEhB,OAAA;UACEe,SAAS,EAAC,iBAAiB;UAC3BM,WAAW,EAAC,IAAI;UAChBC,IAAI,EAAC,QAAQ;UACbX,IAAI,EAAC,OAAO,CAAC;UAAA;UACbC,KAAK,EAAEL,UAAU,CAACgB,KAAM,CAAC;UAAA;UACzBC,QAAQ,EAAEf,iBAAkB;UAC5BgB,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAO,CAAE,CAAC;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpB,CAAC,KAEX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPpB,OAAA;QAAQe,SAAS,EAAC,WAAW;QAACY,OAAO,EAAEC,iBAAkB;QAAAZ,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAhDIF,MAAM;AAAA4B,EAAA,GAAN5B,MAAM;AAkDZ,eAAeA,MAAM;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}