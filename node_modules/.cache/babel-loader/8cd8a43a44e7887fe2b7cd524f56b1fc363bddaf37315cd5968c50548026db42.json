{"ast":null,"code":"var _jsxFileName = \"/Users/prashant/Desktop/react/react-web/src/components/Inputs.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Row from \"./Row\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inputs = () => {\n  _s();\n  const [rowNum, setRowNum] = React.useState([/*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 47\n  }, this)]);\n  function handleCalculation() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Grade type Percentage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), rowNum, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-div--extra\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", \"Find additional grade needed to get average grade of (assumes weights in %)\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"boldText\",\n          children: \"Optional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"addtionalGrade\",\n          placeholder: \"80\",\n          type: \"number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"calculate\",\n        onClick: handleCalculation,\n        children: \"Calculate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_s(Inputs, \"ZWQpFLFUJCOJUYN2hQUiRv9LM+I=\");\n_c = Inputs;\nexport default Inputs;\nvar _c;\n$RefreshReg$(_c, \"Inputs\");","map":{"version":3,"names":["React","Row","jsxDEV","_jsxDEV","Inputs","_s","rowNum","setRowNum","useState","fileName","_jsxFileName","lineNumber","columnNumber","handleCalculation","className","children","placeholder","type","onClick","_c","$RefreshReg$"],"sources":["/Users/prashant/Desktop/react/react-web/src/components/Inputs.jsx"],"sourcesContent":["import React from \"react\";\nimport Row from \"./Row\";\n\nconst Inputs = () => {\n  const [rowNum, setRowNum] = React.useState([<Row />]);\n\n  function handleCalculation() {}\n  return (\n    <div className=\"input-div\">\n      <h2>Grade type Percentage</h2>\n      {rowNum}\n      <div className=\"input-div--extra\">\n        <p>\n          {\" \"}\n          Find additional grade needed to get average grade of (assumes weights\n          in %)\n          <br />\n          <span className=\"boldText\">Optional</span>\n        </p>\n        <span>\n          <input\n            className=\"addtionalGrade\"\n            placeholder=\"80\"\n            type=\"number\"\n          ></input>\n          %\n        </span>\n        <button className=\"calculate\" onClick={handleCalculation}>\n          Calculate\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Inputs;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAC,cAACL,OAAA,CAACF,GAAG;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,CAAC,CAAC;EAErD,SAASC,iBAAiBA,CAAA,EAAG,CAAC;EAC9B,oBACEV,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBZ,OAAA;MAAAY,QAAA,EAAI;IAAqB;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BN,MAAM,eACPH,OAAA;MAAKW,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BZ,OAAA;QAAAY,QAAA,GACG,GAAG,EAAC,6EAGL,eAAAZ,OAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNT,OAAA;UAAMW,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC,eACJT,OAAA;QAAAY,QAAA,gBACEZ,OAAA;UACEW,SAAS,EAAC,gBAAgB;UAC1BE,WAAW,EAAC,IAAI;UAChBC,IAAI,EAAC;QAAQ;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,KAEX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACPT,OAAA;QAAQW,SAAS,EAAC,WAAW;QAACI,OAAO,EAAEL,iBAAkB;QAAAE,QAAA,EAAC;MAE1D;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACP,EAAA,CA9BID,MAAM;AAAAe,EAAA,GAANf,MAAM;AAgCZ,eAAeA,MAAM;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}