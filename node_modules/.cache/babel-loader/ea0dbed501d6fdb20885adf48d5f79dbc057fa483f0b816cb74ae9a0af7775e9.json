{"ast":null,"code":"var _jsxFileName = \"/Users/prashant/Desktop/untitled folder/react/react-web/src/components/Inputs.jsx\",\n  _s = $RefreshSig$();\n// inputs.jsx\nimport React, { useState } from \"react\";\nimport Outputs from \"./Outputs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Inputs = () => {\n  _s();\n  const [grades, setGrades] = useState([]);\n  const handleAddGrade = () => {\n    setGrades([...grades, {\n      grade: 0,\n      weight: 0\n    }]);\n  };\n  const handleGradeChange = (index, e) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedGrades = [...grades];\n    updatedGrades[index][name] = parseFloat(value);\n    setGrades(updatedGrades);\n  };\n  const calculateGrade = () => {\n    let totalWeight = 0;\n    let weightedSum = 0;\n    grades.forEach(({\n      grade,\n      weight\n    }) => {\n      totalWeight += weight;\n      weightedSum += grade / 100 * weight;\n    });\n    if (totalWeight === 0) {\n      return 0; // To handle division by zero\n    }\n    return weightedSum / totalWeight * 100;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-div\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Grade type Percentage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), grades.map((grade, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"grade\",\n        value: grade.grade,\n        onChange: e => handleGradeChange(index, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"weight\",\n        value: grade.weight,\n        onChange: e => handleGradeChange(index, e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addRow\",\n      onClick: handleAddGrade,\n      children: \"+ Add Grade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Outputs, {\n      grade: calculateGrade()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Inputs, \"os7L6whk3/PwvkvXCFfE+iPdVlQ=\");\n_c = Inputs;\nexport default Inputs;\nvar _c;\n$RefreshReg$(_c, \"Inputs\");","map":{"version":3,"names":["React","useState","Outputs","jsxDEV","_jsxDEV","Inputs","_s","grades","setGrades","handleAddGrade","grade","weight","handleGradeChange","index","e","name","value","target","updatedGrades","parseFloat","calculateGrade","totalWeight","weightedSum","forEach","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/prashant/Desktop/untitled folder/react/react-web/src/components/Inputs.jsx"],"sourcesContent":["// inputs.jsx\nimport React, { useState } from \"react\";\nimport Outputs from \"./Outputs\";\n\nconst Inputs = () => {\n  const [grades, setGrades] = useState([]);\n\n  const handleAddGrade = () => {\n    setGrades([...grades, { grade: 0, weight: 0 }]);\n  };\n\n  const handleGradeChange = (index, e) => {\n    const { name, value } = e.target;\n    const updatedGrades = [...grades];\n    updatedGrades[index][name] = parseFloat(value);\n    setGrades(updatedGrades);\n  };\n\n  const calculateGrade = () => {\n    let totalWeight = 0;\n    let weightedSum = 0;\n\n    grades.forEach(({ grade, weight }) => {\n      totalWeight += weight;\n      weightedSum += (grade / 100) * weight;\n    });\n\n    if (totalWeight === 0) {\n      return 0; // To handle division by zero\n    }\n\n    return (weightedSum / totalWeight) * 100;\n  };\n\n  return (\n    <div className=\"input-div\">\n      <h2>Grade type Percentage</h2>\n      {grades.map((grade, index) => (\n        <div key={index}>\n          <input\n            type=\"number\"\n            name=\"grade\"\n            value={grade.grade}\n            onChange={(e) => handleGradeChange(index, e)}\n          />\n          <input\n            type=\"number\"\n            name=\"weight\"\n            value={grade.weight}\n            onChange={(e) => handleGradeChange(index, e)}\n          />\n        </div>\n      ))}\n      <button className=\"addRow\" onClick={handleAddGrade}>\n        + Add Grade\n      </button>\n      <Outputs grade={calculateGrade()} />\n    </div>\n  );\n};\n\nexport default Inputs;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}